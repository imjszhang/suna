services:
  redis:
    image: redis:7-alpine
    expose:
      - 6379
    volumes:
      - ../files/redis-data:/data
    command: redis-server --save 60 1 --loglevel warning
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - dokploy-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    expose:
      - 8000
    volumes:
      - ../files/backend-data:/app/data
    restart: always
    environment:
      - ENV_MODE=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_SSL=False
      - NEXT_PUBLIC_URL=$${project.NEXT_PUBLIC_URL}
      - SUPABASE_URL=$${project.SUPABASE_URL}
      - SUPABASE_ANON_KEY=$${project.SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=$${project.SUPABASE_SERVICE_ROLE_KEY}
      - DAYTONA_API_KEY=$${project.DAYTONA_API_KEY}
      - DAYTONA_SERVER_URL=$${project.DAYTONA_SERVER_URL}
      - DAYTONA_TARGET=$${project.DAYTONA_TARGET}
      - ANTHROPIC_API_KEY=$${project.ANTHROPIC_API_KEY}
      - OPENAI_API_KEY=$${project.OPENAI_API_KEY}
      - TAVILY_API_KEY=$${project.TAVILY_API_KEY}
      - FIRECRAWL_API_KEY=$${project.FIRECRAWL_API_KEY}
      - RAPID_API_KEY=$${project.RAPID_API_KEY}
      - API_DOMAIN=$${project.API_DOMAIN}
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - dokploy-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.suna-api.rule=Host(`$${project.API_DOMAIN}`)"
      - "traefik.http.routers.suna-api.entrypoints=websecure"
      - "traefik.http.routers.suna-api.tls.certResolver=letsencrypt"
      - "traefik.http.services.suna-api.loadbalancer.server.port=8000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    expose:
      - 3000
    volumes:
      - ../files/frontend-data:/app/public/data
    restart: always
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_SUPABASE_URL=$${project.NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=$${project.NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - NEXT_PUBLIC_BACKEND_URL=https://$${project.API_DOMAIN}/api
      - NEXT_PUBLIC_URL=$${project.NEXT_PUBLIC_URL}
      - FRONTEND_DOMAIN=$${project.FRONTEND_DOMAIN}
    depends_on:
      - backend
    networks:
      - dokploy-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.suna-frontend.rule=Host(`$${project.FRONTEND_DOMAIN}`)"
      - "traefik.http.routers.suna-frontend.entrypoints=websecure"
      - "traefik.http.routers.suna-frontend.tls.certResolver=letsencrypt"
      - "traefik.http.services.suna-frontend.loadbalancer.server.port=3000"

networks:
  dokploy-network:
    external: true